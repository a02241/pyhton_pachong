### **API文档**

#### **1. 上传文件**

- **URL**:  `/upload`
- **方法**:  `POST`
- **描述**: 允许用户上传CSV或Excel文件，并指定模型名称。
- **参数**:
    -  `file` : 要上传的文件（在请求的 `multipart/form-data` 部分）。
    -  `model_name` : 模型的名称（在请求的表单数据中）。
- **成功响应**:
    - **代码**:  `200`
    - **内容示例**:
{
    "code": 200,
    "data": {
        "file_path": "./model\\111\\uploads\\test.xlsx",
        "num_columns": 82,
        "num_rows": 72
    },
    "message": "success"
}
- **错误响应**:
    - **代码**:  `400`
    - **内容示例**:
{"code": 400, "message": "没有上传文件"}



#### **2. 处理缺失值**

- **URL**:  `/process_missing_value`
- **方法**:  `GET`
- **描述**: 对指定文件中的缺失值进行处理。
- **参数**:
    -  `file_path` : 文件的路径（在请求的查询字符串中）。
    -  `missing_value` : 缺失值处理策略（mean, median, most_frequent）（在请求的查询字符串中）。
- **成功响应**:
    - **代码**:  `200`
    - **内容示例**:
{
            "code": 200,
            "message": "success",
            "data": {
                "feature_importance": ""[{\"Feature\":\"num__月统筹金额_MAX\",\"Importance\":0.0513178432}, ...]"
            }
        }
- **错误响应**:
    - **代码**:  `400`
    - **内容示例**:
{"code": 400, "message": "Invalid missing_value. Allowed values are: mean, median, most_frequent"}




#### **3. 新建模型文件夹**

- **URL**:  `/new_model`
- **方法**:  `GET`
- **描述**: 为新模型创建必要的目录结构。
- **参数**:
    -  `model_name` : 新模型的名称（在请求的查询字符串中）。
- **成功响应**:
    - **代码**:  `200`
    - **内容示例**:
{"code": 200, "message": "新模型文件夹创建成功"}
- **错误响应**:
    - **代码**:  `400`
    - **内容示例**:
{"code": 400, "message": "未指定模型名称"}







#### **4. 处理文件并下载结果**

- **URL**:  `/process_file`
- **方法**:  `GET`
- **描述**: 加载指定的模型，使用模型处理上传的文件，并提供处理后的文件供下载。
- **参数**:
    -  `file_path` : 上传文件的存储路径（在请求的查询字符串中）(./model\111\uploads\test.xlsx)。
    -  `model_name` : 要使用的模型名称（在请求的查询字符串中）(111)。
- **成功响应**:
    - **代码**:  `200`
    - **内容**: Flask  `send_file` 函数直接发送文件作为响应，允许用户下载处理后的文件。
- **错误响应**:
    - **代码**:  `400`
    - **内容示例**:
{"code": 400, "message": "路径、文件名称或模型名称错误"}
- **代码**:  `404`
    - **内容示例**:
{"code": 404, "message": "测试文件不存在"}






#### **5. 模型列表**

- **URL**:  `/model_list`
- **方法**:  `GET`
- **描述**: 获取所有已存在的模型列表。
- **成功响应**:
    - **代码**:  `200`
    - **内容示例**:
["model1", "model2", "model3"]




#### **6. 删除模型**

- **URL**:  `/delete_model`
- **方法**:  `POST`
- **描述**: 删除指定的模型。
- **参数**:
    -  `model_name` : 要删除的模型名称（在请求的表单数据中）。
- **成功响应**:
    - **代码**:  `200`
    - **内容示例**:
{"code": 200, "message": "Model 'model1' deleted successfully"}
- **错误响应**:
    - **代码**:  `400`
    - **内容示例**:
{"code": 400, "message": "model_name is required"}




### **7. 运行模型**

- **URL**:  `/run_model`
- **方法**:  `POST`
- **描述**: 加载数据，处理缺失值，训练模型，并评估模型性能。最后，保存模型到指定路径。
- **参数**: 通过 `application/x-www-form-urlencoded` 或 `multipart/form-data` 在请求体中发送以下参数：
    -  `file_path` : 上传文件的存储路径。
    -  `model_path` : 模型保存的目标路径。
    -  `random_state` : 用于模型训练的随机状态。
    -  `test_size` : 用于拆分训练集和测试集的测试集大小。
    -  `missing_value` : 缺失值处理策略（mean, median, most_frequent）。

**示例请求URL**:
POST http://192.168.4.44:5000/run_model
**示例请求体**（使用 `application/x-www-form-urlencoded` ）:
file_path=./model/111/uploads/【东软集团A08】医保特征数据16000（修订版）.csv&model_path=./model/111&random_state=42&test_size=0.2&missing_value=mean
或者，如果使用 `multipart/form-data` （尤其是在需要上传文件时）:
file_path: ./model/111/uploads/【东软集团A08】医保特征数据16000（修订版）.csv
model_path: ./model/111
random_state: 42
test_size: 0.2
missing_value: mean
**成功响应**:

- **代码**:  `200`
- **内容示例**:
{
    "code": 200,
    "message": "success",
    "data": {
        "result": {
            "accuracy": 0.95,
            "classification_report": {
                "precision": 0.95,
                "recall": 0.95,
                "f1-score": 0.95,
                "support": 100
            },
            "feature_importances": [0.1, 0.2, 0.3, 0.4],
            "confusion_matrix": {
                "matrix": [[50, 5], [5, 40]],
                "labels": [0, 1]
            },
            "roc_curve": {
                "fpr": [0.0, 0.1, 1.0],
                "tpr": [0.0, 0.9, 1.0],
                "auc": 0.95
            }
        }
    }
}
**错误响应**:

- **代码**:  `400`
- **内容示例**:
{"code": 400, "message": "路径、文件名称或模型名称错误"}
- **代码**:  `404`
- **内容示例**:
{"code": 404, "message": "文件或模型不存在"}
- **代码**:  `500`
- **内容示例**:
{"code": 500, "message": "模型训练或评估过程中出现错误"}
---
